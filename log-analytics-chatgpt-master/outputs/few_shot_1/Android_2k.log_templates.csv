,EventTemplate,Occurrences
0,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}}, allDrawn= {bool}, startingDisplayed =  {bool}, startingMoved =  {bool}, isRelaunching =  {bool}",1
1,"acquire lock={number}, flags={hex}, tag={string}, name={string}, ws={null}, uid={number}, pid={number}",6
2,"ready={bool},policy={number},wakefulness={number},wksummary={hex},uasummary={hex},bootcompleted={bool},boostinprogress={bool},waitmodeenable={bool},mode={bool},manual={number},auto={number},adj={number}userId={number}",198
3,Skipping AppWindowToken{token=Token{ActivityRecord{u0 {packageName}/{activityName} t{taskId}}}} -- going to hide,1
4,visible is {string}.{string}.{string},2
5,{method}.getValue is {bool},4
6,visible is {string},1
7,visible is {string}.{string}.{string} {string} {number},2
8,{string}.{string} is {bool},1
9,"release:lock={number}, flg={hex}, tag=""{string}"", name=""{string}"", ws={null}, uid={number}, pid={number}",17
10,Skipping AppWindowToken{token={token} ActivityRecord{activityRecord} -- going to hide,1
11,"updateClipping isOverlap:{bool}, getTopPadding={number}, Translation={number}",65
12,updateDimmedActivatedHideSensitive overlap:{bool},65
13,getRunningAppProcesses: caller {number} does not hold REAL_GET_TASKS; limiting output,62
14,"release:lock={number}, flg={hex}, tag=""{string}"", name=""{string}"", ws=WorkSource{number}, uid={number}, pid={number}",9
15,"setSystemUiVisibility vis={number} mask={hex} oldVal={number} newVal={number} diff={number} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",3
16,cancelAutohide,15
17,"notifyUiVisibilityChanged:vis={hex}, SystemUiVisibility={hex}",19
18,Destroying surface Surface(name={string} - {string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} <bottom of call stack> <bottom of call,1
19,Destroying surface Surface(name={string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} android.view.IWindowS,1
20,"userActivityNoUpdateLocked: eventTime={number}, event={number}, flags={hex}, uid={number}",69
21,"{string} change is complete, call {string}",1
22,Screen frozen for +{number}s{number}ms due to Window{ca98d5 u0 com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity},1
23,{string} {string},2
24,remove(PendingIntent{19abed0: PendingIntentRecord{a485420 {packageName} {action}}}) changed bounds; rebatching,1
25,"rotationForOrientationLw(orient={number}, last={number}); user={number} USER_ROTATION_LOCKED",3
26,"Application requested orientation {number}, got rotation {number} which has compatible metrics",3
27,"acquire lock={number}, flags={hex}, tag=""{string}"", name={string}, ws={null}, uid={number}, pid={number}",11
28,shouldBlockLocation running ...,37
29,shouldBlockLocation  ret:{bool},37
30,getNeighboringCellInfo calling app is {string},5
31,"Releasing suspend blocker ""{string}"".",33
32,HBM brightnessIn ={number},85
33,HBM brightnessOut ={number},85
34,"Animating brightness: target={number}, rate={number}",85
35,{string},25
36,interceptKeyTq keycode={number} interactive={bool} keyguardActive={bool} policyFlags={hex} down {bool} canceled {bool},14
37,"interceptKeyBeforeQueueing: key {number} , result : {number}",14
38,resumeSuspendedAutohide,10
39,querySoundEffectsEnabled...,17
40,"acquire lock={number}, flags={hex}, tag=""{string}"", name={string}, ws=WorkSource{number}, uid={number}, pid={number}",8
41,"Acquiring suspend blocker ""{string}"".",33
42,Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide,2
43,"setSystemUiVisibility vis={number} mask={hex} oldVal={hex} newVal={number} diff={hex} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",5
44,Bad activity token: {activityToken},1
45,java.lang.ClassCastException: {class} cannot be cast to {class},1
46,"onTouchEvent::{number}, x={number}, y={number}",2
47,schedulePeek,1
48,getRingtonePlayer...,2
49,disable: < expand {ICONS*} alerts {SYSTEM_INFO*} back home recent clock navigationbar search quick_settings >,3
50,"updateLightsLocked,mInCall ={bool},mScreenOn = {bool},ledNotification == null?{bool}",6
51,"updateLightsLocked,turn off notificationLight",6
52,"overlapAmount:{number}, previousNotificationEnd:{number}, newYTranslation:{number}, location:{number}, i:{number}, getTopPadding:{number}, getLocationOnScreen():{number}",13
53,"state.clipTopAmount:{number}, i:{number}",13
54,"setSystemUiVisibility vis={hex} mask={hex} oldVal={hex} newVal={hex} diff={number} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",1
55,onExpandingStarted,2
56,onTrackingStarted,1
57,Destroying surface Surface(name={string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number},1
58,cancelPeek: {bool},20
59,"flingToHeight: vel={number}, expand={bool}, target={number}, collapseSpeedUpFactor={number}, expandBecauseOfFalsing={bool}",2
60,onTrackingStopped: {bool},1
61,onExpandingFinished,2
62,Sending non-protected broadcast {string} from system {number}:{string} pkg {string},2
63,logNotificationVisibilityChanges runInThread start,6
64,onNotificationVisibilityChanged called,6
65,logNotificationVisibilityChanges {action} {location},1
66,isSimPinSecure {variable} is {condition} or {condition},1
67,registerCallback not in UI.,1
68,android.util.AndroidRuntimeException: {string},3
69,*** register callback for {string},1
70,registerCallback not in {string}.,2
71,*** unregister callback for {string},1
72,[PhoneIntfMgr] getDataEnabled: subId={number} phoneId={number},1
73,[PhoneIntfMgr] getDataEnabled: subId={number} retVal={bool},1
74,"ready={bool},policy={number},wakefulness={number},wksummary={hex},uasummary={hex},bootcompleted={bool},boostinprogress={bool},waitmodeenable={bool},mode={bool},manual={number},auto={number},adj={float}userId={number}",1
75,"onInterceptTouchEvent MotionEvent { action={string}, actionButton={number}, id[0]={number}, x[0]={number}, y[0]={number}, toolType[0]={string}, buttonState={number}, metaState={number}, flags={hex}, edgeFlags={hex}, pointerCount={number}, historySize={number}, eventTime={number}, downTime={number}, deviceId={number}, source={hex} }, mBlockTouches={bool}",4
76,playSoundEffect   effectType: {number},10
77,"animateCollapsePanels:flags={number}, force={bool}, delayed={bool}, mExpandedVisible={bool}",8
78,logNotificationVisibilityChanges {string} {string} {string},3
79,START u{number} {act={string} flg={hex} cmp={string} (has extras)} from uid {number} on display {number},1
80,"ActivityRecord info: ActivityInfo{${packageName} ${activityName}}, euid: ${euid}",1
81,"setSystemUiVisibility vis={number} mask={hex} oldVal={hex} newVal={hex} diff={number} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",1
82,onNotificationClick called,2
83,"cancelNotification,index:{number}",23
84,"cancelNotification,cancelNotificationLocked,callingUid = {number},callingPid = {number}",2
85,"cancelNotificationLocked called,tell the app,reason = {number}",2
86,cancelNotificationLocked:{number}|{string}|{number}|{string}|{number},2
87,"cancelNotificationLocked,remove ={string}",2
88,applyOptionsLocked: Unknown animationType={number},2
89,"Taking screenshot from Surface with crop:[{Rect}], width:[{number}], height:[{number}], minLayer:[{number}], maxLayer:[{number}], inRotation:[{bool}], rot:[{number}]",4
90,removeNotification:{number}|{string}|{number}|{string}|{number},2
91,"updateNotificationShade: total={number}, active={number}",13
92,The change in focus caused us to need to do a layout begin,6
93,The change in focus caused us to need to do a layout end,6
94,setLightsOn({bool}),179
95,"setSystemUiVisibility vis={number} mask={number} oldVal={number} newVal={number} diff={number} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",181
96,removeNotificationChildren,12
97,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex} cmp={string} bnds=[{number},{number}][{number},{number}] }",2
98,"Skipping, withExcluded: {bool}, tr.intent:Intent { act={string} flg={hex} cmp={string} (has extras) }",10
99,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex} cmp={string} (has extras) }",15
100,"Skipping, withExcluded: {bool}, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }",2
101,"Skipping, withExcluded: {bool}, tr.intent:Intent { act=android.intent.action.VIEW dat={string} typ={string} flg={hex} cmp={string} (has extras) }",6
102,"getRecentTasks: num={number},flags={number},totalTasks={number}",14
103,getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity},8
104,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg=0x{hex} cmp={string} bnds=[{number},{number}][{number},{number}] }",3
105,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex} cmp={component} (has extras) }",5
106,"cancelNotificationWithTag pid {number},uid = {number},tag = {string},pkg ={string},id ={number}",6
107,"cancelNotificationWithTag pid {number},uid ={number},tag ={string},pkg ={string},id ={number}",12
108,makeExpandedInvisible: mExpandedVisible={bool},4
109,closeQs,12
110,instantCollapse,7
111,disable: < {string} expand icons* alerts {string} back home recent clock navigationbar search quick_settings >,1
112,"cancelNotificationWithTag pid {number},uid ={number},tag = {string},pkg ={string},id ={number}",2
113,*** unregister callback for {string}@{hex},1
114,getTasks: caller {number} does not hold REAL_GET_TASKS; limiting output,5
115,Destroying surface Surface(name={string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string},1
116,getTasks: caller {number} does not hold {string}; limiting output,32
117,isMusicActive...,7
118,"I'm sorry, but the log message provided is not delimited by backticks. Can you please provide the log message delimited by backticks so that I can assist you further?",1
119,"Start dump, calling from : pid={number}, uid={number}",1
120,setWiredDeviceConnectionState  type: {number}  state: {number},2
121,"acquire lock={number}, flags={hex}, tag=""{string}"", name=""{string}"", ws={null}, uid={number}, pid={number}",1
122,"ActivityManagerService,attachApplication,callingPid = {number}",4
123,isBluetoothA2dpOn...,1
124,isBluetoothScoOn...,1
125,getLastAudibleStreamVolume  treamType: {number},9
126,getRunningAppProcesses: caller {number} does not hold {string}; limiting output,19
127,getDevicesForStream  streamType: {number},2
128,cleanUpApplicationRecord -- {string} {number},5
129,"cleanUpApplicationRecordLocked, pid: {number}, restart: {bool}",6
130,"cleanUpApplicationRecordLocked, reset pid: {number}, euid: {number}",6
131,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested={bool},6
132,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={number},6
133,"I'm sorry, but the log message provided is incomplete. In order to create a template, I would need the complete log message delimited by backticks. If you could provide the full log message, I would be happy to create the template for you.",1
134,setSpeakerphoneOn  on: {bool},1
135,setSpeakerphoneOn on:{bool},1
136,"sending alarm Alarm{aa90550 type {number} when {number} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {number},listenerTag ={string}",1
137,Received {string} alarm; rescheduling,3
138,scheduleTimeTickEvent triggerAtTime = {number},3
139,received broadcast {string},4
140,handleTimeUpdate,3
141,Destroying surface Surface(name={string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number},19
142,setLightsOn:{bool},2
143,"I'm sorry, but the log message provided is not delimited by backticks and does not contain any variables to abstract. Can you please provide a log message that includes variables to abstract?",4
144,"sending alarm Alarm{19069ff type {number} when {number} PendingIntent{50303cc: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}},repeatInterval = {number},listenerTag ={null}",1
145,Killing {number}:{string}/{string} (adj {number}): empty for {number}s,1
146,cleanUpApplicationRecord -- {number},1
147,"sending alarm Alarm{c1705d3 type {number} when {number} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {number},listenerTag ={string}",1
148,remove(PendingIntent{e4e2534: PendingIntentRecord{e204f60 {packageName} {action}}}) changed bounds; rebatching,1
149,Unable to start service Intent { act={string} cmp={string} U={number}: {string},1
150,unregisterAudioFocusListener...,1
151,abandonAudioFocus,1
152,"[HSM] stayAwake {bool} uid: {number}, pid: {number}",1
153,Pid:{number} {string},1
154,Process {processName} (pid {processId}) has died,1
155,Scheduling restart of crashed service {service} in {number}ms,1
156,"new Process app=ProcessRecord{6eaaf00 0:{string}:qzone/u0a111}, name: {string}, euid: {number}",1
157,Start proc {number}:{string}:{string}/{string} for service {string}/{string},1
158,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex}, cmp={string} bnds=[{number},{number}][{number},{number}] }",1
159,"Skipping, withExcluded: {bool}, tr.intent:Intent { act={string} dat={string} flg={hex} cmp={string} }",1
160,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex} cmp={component} bnds=[{number},{number}][{number},{number}] }",4
161,"setSystemUiVisibility vis={hex} mask={hex} oldVal={hex} newVal={hex} diff={hex} fullscreenStackVis={number} dockedStackVis={number}, fullscreenStackBounds=Rect({number}, {number} - {number}, {number}), dockedStackBounds=Rect({number}, {number} - {number}, {number})",8
162,enqueueNotificationInternal: pkg={string} id={number} notification=Notification(pri={number} contentView={null|string} vibrate=[{number}] sound={null|string} tick defaults={hex} flags={hex} color={hex} vis={string},1
163,enqueueNotificationInternal: n.getKey = {number}|{string}|{number}|{string}|{number},1
164,getRingerMode...,3
165,addNotification key={number}|{string}|{number}|{string}|{number},2
166,mHeadsUpExistenceChangedRunnable,3
167,Marking notification as seen {number}|{string}|{number}|{string}|{number},1
168,onNotificationExpansionChanged called,2
169,START u0 {act={string} cat={string} flg={hex} cmp={string} bnds={string}} from uid {number} on display {number},1
170,"ActivityRecord info: ActivityInfo{f39182 {string}}, euid: {number}",1
171,"Skipping, withExcluded: {bool}, tr.intent:Intent { act={string} dat={string} flg={hex} cmp={string} (has extras) }",4
172,getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor},4
173,"Skipping, withExcluded: {bool}, tr.intent:Intent { act={string} flg={hex} cmp={string} }",1
174,"ACTIVITY check resid: {string}, size={number}",2
175,m{string},1
176,disable: < {string} >,2
177,logNotificationVisibilityChanges {string} {bool} {string},2
178,Destroying surface Surface(name={string}) called by {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number} {string}.{string}:{number},1
179,"setSystemUiVisibility vis={hex} mask={hex} oldVal={hex} newVal={hex} diff={hex} fullscreenStackVis={int} dockedStackVis={int}, fullscreenStackBounds=Rect({int}, {int} - {int}, {int}), dockedStackBounds=Rect({int}, {int} - {int}, {int})",1
180,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg=0x{hex} cmp={component} bnds=[{number},{number}][{number},{number}] }",3
181,"Skipping, withExcluded: {bool}, tr.intent:Intent { act=android.intent.action.MAIN flg={hex} cmp={component} (has extras) }",2
182,"Skipping, withExcluded: {bool}, tr.intent:Intent { act=android.intent.action.VIEW dat={string} typ={string} flg={string} cmp={string} (has extras) }",1
183,Destroying surface Surface(name={string}) called by {string},1
184,"START u0 {act={string} cat={string} flg={hex} cmp={string} bnds=[{number},{number}][{number},{number}]} from uid {number} on display {number}",1
185,"ActivityRecord info: ActivityInfo{71e60ba com.tencent.mobileqq.activity.SplashActivity}, euid: {number}",1
186,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex} cmp={component} }",1
187,getAllCellInfo is blocked by permission manager . callingPackage = {packageName},2
188,getCellLocation is blocked by permission manager uid:{number} pid:{number},1
189,getAllCellInfo is blocked by permission manager . callingPackage = {string},1
190,"sending alarm Alarm{d764221 type {number} when {number} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {number},listenerTag ={string}",1
191,The log message provided is not delimited by backticks. Please provide the log message delimited by backticks so that I can extract the template for you.,1
192,"setDataSource({number}, {number}, {number})",1
193,getStreamVolume  treamType: {number},1
194,"updateIsPoweredLocked: wasPowered={bool}, mIsPowered={bool}, oldPlugType={number}, mPlugType={number}, mBatteryLevel={number}",1
195,ACTION_BATTERY_CHANGED AMP: {number}; Volt: {number},1
196,updateChargingLocked: charging={bool},1
197,"onReceive, action:{string}",1
198,ACTION_BATTERY_CHANGED pluggedType: {number},1
199,ApStaDisabledState what={number},1
200,DefaultState what={number},1
201,battery changed pluggedType: {number},1
202,RefreshBatteryInfo isBatteryLow: {bool},2
203,ChargingSpeed  Wattage: {number} ST: {number} --> {number},1
204,handleBatteryUpdate,1
205,"Skipping, withExcluded: {bool}, tr.intent:Intent { act=android.intent.action.MAIN flg=0x{hex} cmp={string} (has extras) }",1
206,"Skipping, withExcluded: {bool}, tr.intent:Intent { flg={hex}, cmp={component} bnds=[{number},{number}][{number},{number}] }",1
207,enqueueNotificationInternal: pkg={string} id={number} notification=Notification(pri={number} contentView={null} vibrate={array} sound={null} tick defaults={hex} flags={hex} color={hex} category={string} vis={string}),1
208,enqueueNotificationInternal: n.getKey = {number}|{string}|{number}|{null}|{number},1
209,Marking notification as seen {number}|{string}|{number}|{null}|{number},1
210,"sending alarm Alarm{${number} type ${number} when ${number} PendingIntent{${string}: PendingIntentRecord{${string} ${string} ${string}}},repeatInterval = ${number},listenerTag =${string}",1
211,START u0 {flg={hex} cmp={component} (has extras)} from uid {number} on display {number},1
212,"ActivityRecord info: ActivityInfo{${string} ${string}}, euid: ${number}",1
213,startActivity called from {string}; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg={hex} cmp={string} (has extras) },1
214,getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI},2
