,EventTemplate,Occurrences
0,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)",200
1,"ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>=<*>",199
2,setLightsOn(<*>),179
3,HBM brightnessIn =<*>,85
4,HBM brightnessOut =<*>,85
5,"Animating brightness: target=<*>, rate=<*>",85
6,"userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>",69
7,"updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>",65
8,updateDimmedActivatedHideSensitive overlap:<*>,65
9,getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output,62
10,shouldBlockLocation running ...,37
11,shouldBlockLocation ret:<*>,37
12,"Releasing suspend blocker ""<*>"".",33
13,"Acquiring suspend blocker ""<*>"".",33
14,getTasks: caller <*> does not hold <*>; limiting output,32
15,"release:lock=<*>, flg=<*>, tag=""<*>"", name=""<*>"", ws=<*>, uid=<*>, pid=<*>",26
16,<*>,26
17,"cancelNotification,index:<*>",23
18,cancelPeek: <*>,20
19,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) }",20
20,Destroying surface Surface(name=<*>) called by <*> <*> <*> <*> <*> <*> <*>,20
21,"notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>",19
22,"acquire lock=<*>, flags=<*>, tag=""<*>"", name=<*>, ws=<*>, uid=<*>, pid=<*>",19
23,getRunningAppProcesses: caller <*> does not hold <*>; limiting output,19
24,querySoundEffectsEnabled...,17
25,cancelAutohide,15
26,interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>,14
27,"interceptKeyBeforeQueueing: key <*> , result : <*>",14
28,"getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>",14
29,"overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*>",13
30,"state.clipTopAmount:<*>, i:<*>",13
31,"updateNotificationShade: total=<*>, active=<*>",13
32,removeNotificationChildren,12
33,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>][<*>,<*>] }",12
34,"cancelNotificationWithTag pid <*>,uid =<*>,tag =<*>,pkg =<*>,id =<*>",12
35,closeQs,12
36,resumeSuspendedAutohide,10
37,playSoundEffect effectType: <*>,10
38,"Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) }",10
39,getLastAudibleStreamVolume treamType: <*>,9
40,"animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>",8
41,getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity},8
42,"Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.VIEW dat=<*> typ=<*> flg=<*> cmp=<*> (has extras) }",7
43,instantCollapse,7
44,isMusicActive...,7
45,"acquire lock=<*>, flags=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>",6
46,"updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == <*>",6
47,"updateLightsLocked,turn off notificationLight",6
48,logNotificationVisibilityChanges runInThread start,6
49,onNotificationVisibilityChanged called,6
50,The change in focus caused us to need to do a layout begin,6
51,The change in focus caused us to need to do a layout end,6
52,"cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>",6
53,"cleanUpApplicationRecordLocked, pid: <*>, restart: <*>",6
54,"cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>",6
55,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>,6
56,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>,6
57,getNeighboringCellInfo calling app is <*>,5
58,logNotificationVisibilityChanges <*> <*> <*>,5
59,getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output,5
60,cleanUpApplicationRecord -- <*> <*>,5
61,<*>.getValue is <*>,4
62,"onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=<*>, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=<*>",4
63,"Taking screenshot from Surface with crop:[<*>], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>]",4
64,makeExpandedInvisible: mExpandedVisible=<*>,4
65,"ActivityManagerService,attachApplication,callingPid = <*>",4
66,received broadcast <*>,4
67,"I'm sorry, but the log message provided is not delimited by backticks and does not contain any variables to abstract. Can you please provide a log message that includes variables to abstract?",4
68,"Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> dat=<*> flg=<*> cmp=<*> (has extras) }",4
69,getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor},4
70,visible is <*>,3
71,"rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED",3
72,"Application requested orientation <*>, got rotation <*> which has compatible metrics",3
73,disable: < expand {ICONS*} alerts {SYSTEM_INFO*} back home recent clock navigationbar search quick_settings >,3
74,android.util.AndroidRuntimeException: <*>,3
75,Received <*> alarm; rescheduling,3
76,scheduleTimeTickEvent triggerAtTime = <*>,3
77,handleTimeUpdate,3
78,getRingerMode...,3
79,mHeadsUpExistenceChangedRunnable,3
80,"Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.MAIN flg=<*> cmp=<*> (has extras) }",3
81,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
82,visible is <*> <*> <*>,2
83,<*> <*>,2
84,Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide,2
85,"onTouchEvent::<*>, x=<*>, y=<*>",2
86,getRingtonePlayer...,2
87,onExpandingStarted,2
88,"flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>",2
89,onExpandingFinished,2
90,Sending non-protected broadcast <*> from system <*> pkg <*>,2
91,registerCallback not in <*>.,2
92,"ActivityRecord info: ActivityInfo{$<*> $<*>}, euid: $<*>",2
93,onNotificationClick called,2
94,"cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>",2
95,"cancelNotificationLocked called,tell the app,reason = <*>",2
96,cancelNotificationLocked:<*>|<*>|<*>|<*>|<*>,2
97,"cancelNotificationLocked,remove =<*>",2
98,applyOptionsLocked: Unknown animationType=<*>,2
99,removeNotification:<*>|<*>|<*>|<*>|<*>,2
100,"Skipping, withExcluded: <*>, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }",2
101,"cancelNotificationWithTag pid <*>,uid =<*>,tag = <*>,pkg =<*>,id =<*>",2
102,setWiredDeviceConnectionState type: <*> state: <*>,2
103,getDevicesForStream streamType: <*>,2
104,setLightsOn:<*>,2
105,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*>, cmp=<*> bnds=[<*>,<*>][<*>,<*>] }",2
106,enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|<*>|<*>,2
107,addNotification key=<*>|<*>|<*>|<*>|<*>,2
108,Marking notification as seen <*>|<*>|<*>|<*>|<*>,2
109,onNotificationExpansionChanged called,2
110,"ACTIVITY check resid: <*>, size=<*>",2
111,disable: < <*> >,2
112,RefreshBatteryInfo isBatteryLow: <*>,2
113,getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI},2
114,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*>",1
115,Skipping AppWindowToken{token=Token{ActivityRecord{u0 <*>/<*> <*>}}} -- going to hide,1
116,<*> is <*>,1
117,Skipping AppWindowToken{token=<*> <*> -- going to hide,1
118,Destroying surface Surface(name=<*> - <*>) called by <*> <*> <*> <*> <*> <*> <bottom of call stack> <bottom of call,1
119,Destroying surface Surface(name=<*>) called by <*> <*> <*> <*> <*> <*> android.view.IWindowS,1
120,"<*> change is complete, call <*>",1
121,Screen frozen for +<*> due to Window{ca98d5 u0 com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity},1
122,remove(PendingIntent{19abed0: PendingIntentRecord{a485420 <*> <*>}}) changed bounds; rebatching,1
123,Bad activity token: <*>,1
124,java.lang.ClassCastException: <*> cannot be cast to <*>,1
125,schedulePeek,1
126,onTrackingStarted,1
127,Destroying surface Surface(name=<*>) called by <*> <*> <*> <*> <*> <*>,1
128,onTrackingStopped: <*>,1
129,logNotificationVisibilityChanges <*> <*>,1
130,isSimPinSecure <*> is <*> or <*>,1
131,registerCallback not in UI.,1
132,*** register callback for <*>,1
133,*** unregister callback for <*>,1
134,[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>,1
135,[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>,1
136,START <*> {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>,1
137,disable: < <*> expand icons* alerts <*> back home recent clock navigationbar search quick_settings >,1
138,*** unregister callback for <*>@<*>,1
139,"I'm sorry, but the log message provided is not delimited by backticks. Can you please provide the log message delimited by backticks so that I can assist you further?",1
140,"Start dump, calling from : pid=<*>, uid=<*>",1
141,"acquire lock=<*>, flags=<*>, tag=""<*>"", name=""<*>"", ws=<*>, uid=<*>, pid=<*>",1
142,isBluetoothA2dpOn...,1
143,isBluetoothScoOn...,1
144,"I'm sorry, but the log message provided is incomplete. In order to create a template, I would need the complete log message delimited by backticks. If you could provide the full log message, I would be happy to create the template for you.",1
145,setSpeakerphoneOn on: <*>,1
146,setSpeakerphoneOn on:<*>,1
147,"sending alarm Alarm{aa90550 type <*> when <*> PendingIntent{<*>: <*>}},repeatInterval = <*>,listenerTag =<*>",1
148,"sending alarm Alarm{19069ff type <*> when <*> PendingIntent{50303cc: <*>}},repeatInterval = <*>,listenerTag =<*>",1
149,Killing <*>/<*> (adj <*>): empty for <*>,1
150,cleanUpApplicationRecord -- <*>,1
151,"sending alarm Alarm{c1705d3 type <*> when <*> PendingIntent{<*>: <*>}},repeatInterval = <*>,listenerTag =<*>",1
152,remove(PendingIntent{e4e2534: PendingIntentRecord{e204f60 <*> <*>}}) changed bounds; rebatching,1
153,Unable to start service Intent { act=<*> cmp=<*> U=<*>: <*>,1
154,unregisterAudioFocusListener...,1
155,abandonAudioFocus,1
156,"[HSM] stayAwake <*> uid: <*>, pid: <*>",1
157,Pid:<*> <*>,1
158,Process <*> (pid <*>) has died,1
159,Scheduling restart of crashed service <*> in <*>,1
160,"new Process app=ProcessRecord{6eaaf00 <*>:qzone/u0a111}, name: <*>, euid: <*>",1
161,Start proc <*>/<*> for service <*>/<*>,1
162,"Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> dat=<*> flg=<*> cmp=<*> }",1
163,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView={<*>|string} vibrate=[<*>] sound={<*>|string} tick defaults=<*> flags=<*> color=<*> vis=<*>,1
164,START u0 {act=<*> cat=<*> flg=<*> cmp=<*> bnds=<*>} from uid <*> on display <*>,1
165,"ActivityRecord info: ActivityInfo{f39182 <*>}, euid: <*>",1
166,"Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> }",1
167,Destroying surface Surface(name=<*>) called by <*> <*> <*> <*> <*> <*> <*> <*>,1
168,Destroying surface Surface(name=<*>) called by <*>,1
169,"START u0 {act=<*> cat=<*> flg=<*> cmp=<*> bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>",1
170,"ActivityRecord info: <*>, euid: <*>",1
171,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> }",1
172,getCellLocation is blocked by permission manager uid:<*> pid:<*>,1
173,"sending alarm Alarm{d764221 type <*> when <*> PendingIntent{<*>: <*>}},repeatInterval = <*>,listenerTag =<*>",1
174,The log message provided is not delimited by backticks. Please provide the log message delimited by backticks so that I can extract the template for you.,1
175,"setDataSource(<*>, <*>, <*>)",1
176,getStreamVolume treamType: <*>,1
177,"updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>",1
178,ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>,1
179,updateChargingLocked: charging=<*>,1
180,"onReceive, action:<*>",1
181,ACTION_BATTERY_CHANGED pluggedType: <*>,1
182,ApStaDisabledState what=<*>,1
183,DefaultState what=<*>,1
184,battery changed pluggedType: <*>,1
185,ChargingSpeed Wattage: <*> ST: <*> --> <*>,1
186,handleBatteryUpdate,1
187,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=<*> sound=<*> tick defaults=<*> flags=<*> color=<*> category=<*> vis=<*>),1
188,"sending alarm Alarm{$<*> type $<*> when $<*> PendingIntent{$<*>: PendingIntentRecord{$<*> $<*> $<*>}},repeatInterval = $<*>,listenerTag =$<*>",1
189,START u0 {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>,1
190,startActivity called from <*>; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) },1
