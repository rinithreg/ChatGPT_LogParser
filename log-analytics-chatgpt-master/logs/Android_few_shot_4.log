`printFreezingDisplayLogsopening app wtoken = AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}}, allDrawn= {allDrawn}, startingDisplayed =  {startingDisplayed}, startingMoved =  {startingMoved}, isRelaunching =  {isRelaunching}`
 =================== 
The template of `acquire lock=233570404, flags=0x1, tag="View Lock", name=com.android.systemui, ws=null, uid=10037, pid=2227` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`Skipping AppWindowToken{token={token} ActivityRecord{activityRecord} -- going to hide`
 =================== 
The template of `visible is system.time.showampm` is `visible is system.time.showampm`.
 =================== 
The template of `mVisiblity.getValue is false` is `mVisiblity.getValue is false`.
 =================== 
The template of `visible is system.charge.show` is `visible is system.charge.show`.
 =================== 
The template of `mVisiblity.getValue is false` is `mVisiblity.getValue is false`.
 =================== 
The template of `visible is system.call.count gt 0` is `visible is system.call.count gt 0`.
 =================== 
The template of `mVisiblity.getValue is false` is `mVisiblity.getValue is false`.
 =================== 
The template of `visible is system.message.count gt 0` is `visible is system.message.count gt 0`.
 =================== 
The template of `mVisiblity.getValue is false` is `mVisiblity.getValue is false`.
 =================== 
The template of `visible is system.ownerinfo.show` is `visible is system.ownerinfo.show`.
 =================== 
The template of `mVisiblity.getValue is false` is `mVisiblity.getValue is false`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `Skipping AppWindowToken{df0798e token=Token{78af589 ActivityRecord{3b04890 u0 com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity t761}}} -- going to hide` is `Skipping AppWindowToken{token={token} ActivityRecord{u0 {activity} t{taskId}}} -- going to hide`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{10113}, uid={uid}, pid={pid}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261843648, event=0, flags=0x1, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `orientation change is complete, call stopFreezingDisplayLocked` is `orientation change is complete, call stopFreezingDisplayLocked`.
 =================== 
The template of `Screen frozen for +1s0ms due to Window{ca98d5 u0 com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity}` is `Screen frozen for +{time} due to Window{windowId}`.
 =================== 
The template of `startAnimation begin` is `startAnimation begin`.
 =================== 
The template of `startAnimation end` is `startAnimation end`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `remove(PendingIntent{19abed0: PendingIntentRecord{a485420 com.tencent.qt.qtl broadcastIntent}}) changed bounds; rebatching` is `remove(PendingIntent{19abed0: PendingIntentRecord{a485420 com.tencent.qt.qtl broadcastIntent}}) changed bounds; rebatching`.
 =================== 
The template of `rotationForOrientationLw(orient=1, last=0); user=0 USER_ROTATION_LOCKED` is `rotationForOrientationLw(orient={orient}, last={last}); user={user} USER_ROTATION_LOCKED`.
 =================== 
`Application requested orientation {orientation}, got rotation {rotation} which has compatible metrics`
 =================== 
The template of `acquire lock=166121161, flags=0x1, tag="RILJ_ACK_WL", name=com.android.phone, ws=null, uid=1001, pid=2626` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template is `getNeighboringCellInfo calling app is {callingApp}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of the log message is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261849942, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`suspendAutohide`
 =================== 
`interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261849949, event=1, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
`querySoundEffectsEnabled...`
 =================== 
The template of `acquire lock=189667585, flags=0x1, tag="*launch*", name=android, ws=WorkSource{10113}, uid=1000, pid=1702` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of the given log message is `Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `Bad activity token: android.os.BinderProxy@2bd79ce` is `Bad activity token: android.os.BinderProxy@{token}`.
 =================== 
The template of `java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token` is `java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token`.
 =================== 
`Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
`suspendAutohide`
 =================== 
The template of `onTouchEvent::0, x=271.0, y=14.0` is `onTouchEvent::{param1}, x={param2}, y={param3}`.
 =================== 
`schedulePeek`
 =================== 
`getRingtonePlayer...`
 =================== 
The template of `disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >` is `disable: < expand {ICONS}* alerts {SYSTEM_INFO}* back home recent clock navigationbar search quick_settings >`.
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
The template of `updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true` is `updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`.
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
`getRingtonePlayer...`
 =================== 
The template of `updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true` is `updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`.
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:180, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-529.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`suspendAutohide`
 =================== 
`onExpandingStarted`
 =================== 
`suspendAutohide`
 =================== 
`onTrackingStarted`
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
`suspendAutohide`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:130, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-479.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:103, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
`updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen()}`
 =================== 
The template of `state.clipTopAmount:69, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
`updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen()}`.
 =================== 
The template of `state.clipTopAmount:30, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-379.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:-1, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-338.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-293.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-250.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`suspendAutohide`
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
`onTouchEvent::{action}, x={x}, y={y}`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
The template is `flingToHeight: vel={vel}, expand={expand}, target={target}, collapseSpeedUpFactor={collapseSpeedUpFactor}, expandBecauseOfFalsing={expandBecauseOfFalsing}`.
 =================== 
The template of `onTrackingStopped: true` is `onTrackingStopped: {value}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-240.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-200.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-168.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-113.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-72.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-55.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-29.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-19.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-11.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-2.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-1.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`onExpandingFinished`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `Sending non-protected broadcast com.android.systemui.statusbar.visible.change from system 2227:com.android.systemui/u0a37 pkg com.android.systemui` is `Sending non-protected broadcast {broadcast} from system {systemId}:{systemInfo} pkg {package}`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
`isSimPinSecure mSimDatas is null or empty`
 =================== 
The template of `registerCallback not in UI.` is `registerCallback not in UI.`.
 =================== 
The template of `android.util.AndroidRuntimeException: Must execute in UI` is `android.util.AndroidRuntimeException: Must execute in UI`.
 =================== 
The template of `*** register callback for com.android.systemui.statusbar.policy.KeyguardMonitor@712d093` is `*** register callback for com.android.systemui.statusbar.policy.KeyguardMonitor@{callbackId}`.
 =================== 
The template of `registerCallback not in UI.` is `registerCallback not in UI.`.
 =================== 
The template of `android.util.AndroidRuntimeException: Must execute in UI` is `android.util.AndroidRuntimeException: Must execute in UI`.
 =================== 
The template of `*** unregister callback for null` is `*** unregister callback for null`.
 =================== 
`[PhoneIntfMgr] getDataEnabled: subId={subId} phoneId={phoneId}`
 =================== 
`[PhoneIntfMgr] getDataEnabled: subId={subId} retVal={retVal}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`onInterceptTouchEvent MotionEvent { action={action}, actionButton={actionButton}, id[0]={id[0]}, x[0]={x[0]}, y[0]={y[0]}, toolType[0]={toolType[0]}, buttonState={buttonState}, metaState={metaState}, flags={flags}, edgeFlags={edgeFlags}, pointerCount={pointerCount}, historySize={historySize}, eventTime={eventTime}, downTime={downTime}, deviceId={deviceId}, source={source} }, mBlockTouches={mBlockTouches}`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`onInterceptTouchEvent MotionEvent { action={action}, actionButton={actionButton}, id[0]={id[0]}, x[0]={x[0]}, y[0]={y[0]}, toolType[0]={toolType[0]}, buttonState={buttonState}, metaState={metaState}, flags={flags}, edgeFlags={edgeFlags}, pointerCount={pointerCount}, historySize={historySize}, eventTime={eventTime}, downTime={downTime}, deviceId={deviceId}, source={source} }, mBlockTouches={mBlockTouches}`
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
`onExpandingStarted`
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
`START u0 {act=com.tencent.mobileqq.action.MAINACTIVITY flg=0x14000000 cmp=com.tencent.mobileqq/.activity.SplashActivity (has extras)} from uid {uid} on display {display}`
 =================== 
`ActivityRecord info: ActivityInfo{info}, euid: {euid}`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500` is `notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws=WorkSource{10111}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`onNotificationClick called`
 =================== 
The template of `cancelNotification,index:0` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotification,cancelNotificationLocked,callingUid = {callingUid},callingPid = {callingPid}`
 =================== 
The template of `cancelNotificationLocked called,tell the app,reason = 1` is `cancelNotificationLocked called,tell the app,reason = {reason}`.
 =================== 
The template of `cancelNotificationLocked:0|com.tencent.mobileqq|121|null|10111` is `cancelNotificationLocked:{arg1}|{arg2}|{arg3}|{arg4}|{arg5}`.
 =================== 
The template of `cancelNotificationLocked,remove =com.tencent.mobileqq` is `cancelNotificationLocked,remove ={remove}`.
 =================== 
`applyOptionsLocked: Unknown animationType={animationType}`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
The template of `flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false` is `flingToHeight: vel={vel}, expand={expand}, target={target}, collapseSpeedUpFactor={collapseSpeedUpFactor}, expandBecauseOfFalsing={expandBecauseOfFalsing}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-6.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-21.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-43.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`Taking screenshot from Surface with crop:[{crop}], width:[{width}], height:[{height}], minLayer:[{minLayer}], maxLayer:[{maxLayer}], inRotation:[{inRotation}], rot:[{rot}]`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-70.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-139.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true` is `updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`.
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-178.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-222.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap={overlap}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `removeNotification:0|com.tencent.mobileqq|121|null|10111` is `removeNotification:{arg1}|{arg2}|{arg3}|{arg4}|{arg5}`.
 =================== 
The template of `updateNotificationShade: total=0, active=0` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
The template of `The change in focus caused us to need to do a layout end` is `The change in focus caused us to need to do a layout end`.
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:79, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-428.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`.
 =================== 
The template of `state.clipTopAmount:138, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-487.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:197, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-546.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `onExpandingFinished` is `onExpandingFinished`.
 =================== 
`updateNotificationShade: total={total}, active={active}`
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `Sending non-protected broadcast com.android.systemui.statusbar.visible.change from system 2227:com.android.systemui/u0a37 pkg com.android.systemui` is `Sending non-protected broadcast {broadcast} from system {systemInfo} pkg {package}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bounds}] }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is:
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bounds}] }`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{trIntent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid ={uid},tag ={tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `makeExpandedInvisible: mExpandedVisible=true` is `makeExpandedInvisible: mExpandedVisible={mExpandedVisible}`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >` is `disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >`.
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =123` is `cancelNotificationWithTag pid {pid},uid ={uid},tag ={tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid ={uid},tag ={tag},pkg ={pkg},id ={id}`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =144` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `registerCallback not in UI.` is `registerCallback not in UI.`.
 =================== 
The template of `android.util.AndroidRuntimeException: Must execute in UI` is `android.util.AndroidRuntimeException: Must execute in UI`.
 =================== 
`*** unregister callback for {callback}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getTasks: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of the given log message is:
`Destroying surface Surface(name={surfaceName}) called by {caller}.`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
`Start dump, calling from : pid={pid}, uid={uid}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `acquire lock=237091223, flags=0x1, tag="WiredAccessoryManager", name=android, ws=null, uid=1000, pid=1702` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`setWiredDeviceConnectionState  type: {type}  state: {state}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setWiredDeviceConnectionState  type: 4  state: 0` is `setWiredDeviceConnectionState  type: {type}  state: {state}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
`ActivityManagerService,attachApplication,callingPid = {callingPid}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`isBluetoothA2dpOn...`
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
`isBluetoothScoOn...`
 =================== 
`getLastAudibleStreamVolume  treamType: {streamType}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 1` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 2` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
The template of `getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`getDevicesForStream  streamType: {streamType}`
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 3` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
`getDevicesForStream  streamType: {streamType}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 4` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 5` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
`getLastAudibleStreamVolume  treamType: {streamType}`
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 7` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
The template of `getLastAudibleStreamVolume  treamType: 8` is `getLastAudibleStreamVolume  treamType: {streamType}`.
 =================== 
The template of `cleanUpApplicationRecord -- 12025` is `cleanUpApplicationRecord -- {value}`.
 =================== 
`cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
The template of `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false` is `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false`.
 =================== 
The template of `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0` is `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`.
 =================== 
`getMode...`
 =================== 
The template of `setSpeakerphoneOn  on: true` is `setSpeakerphoneOn  on: {on}`.
 =================== 
The template of `setSpeakerphoneOn on:true` is `setSpeakerphoneOn on:{on}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `release:lock=219829192, flg=0x0, tag="AudioMix", name=audioserver", ws=null, uid=1041, pid=0` is `release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`sending alarm Alarm{aa90550 type {type} when {when} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {repeatInterval},listenerTag ={listenerTag}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template is `Acquiring suspend blocker "{blocker}".`
 =================== 
The template of `Received TIME_TICK alarm; rescheduling` is `Received TIME_TICK alarm; rescheduling`.
 =================== 
The template of `scheduleTimeTickEvent triggerAtTime = 509202333` is `scheduleTimeTickEvent triggerAtTime = {triggerAtTime}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `received broadcast android.intent.action.TIME_TICK` is `received broadcast {action}`.
 =================== 
The template of `handleTimeUpdate` is `handleTimeUpdate`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261866434, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261867236, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of the given log message is:
`Destroying surface Surface(name={name}) called by {caller}.`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261871547, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261872249, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `getNeighboringCellInfo calling app is com.amap.android.ams` is `getNeighboringCellInfo calling app is com.amap.android.ams`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of the log message is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261875239, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of the given log message is:
`Destroying surface Surface(name={name}) called by {caller} com.android.server.wm.WindowStateAnimator.destroySurface:{line1} com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:{line2} com.android.server.wm.WindowState.removeLocked:{line3} com.android.server.wm.WindowManagerService.removeWindowInnerLocked:{line4} com.android.server.wm.WindowManagerService.removeWindowInnerLocked:{line5} com.android.server.wm.WindowManagerService.removeWindowLocked:{line6} com.android.server.wm.WindowManagerService.re`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261880856, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261883596, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261885300, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261887070, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`playSoundEffect   effectType: {effectType}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
The template of the given log message is:
`sending alarm Alarm{19069ff type {type} when {when} PendingIntent{50303cc: PendingIntentRecord{e204f60 {packageName} {action}}},repeatInterval = {repeatInterval},listenerTag ={listenerTag}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s` is `Killing {pid}:{process} (adj {adj}): empty for {duration}s`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false` is `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false`.
 =================== 
The template of `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0` is `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`.
 =================== 
The template of `cleanUpApplicationRecord -- 5784` is `cleanUpApplicationRecord -- {value}`.
 =================== 
`cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
`stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false`
 =================== 
`stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`
 =================== 
The template of `cleanUpApplicationRecord -- 23484` is `cleanUpApplicationRecord -- {appId}`.
 =================== 
`cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
The template of `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false` is `stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false`.
 =================== 
The template of `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0` is `stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`.
 =================== 
The template of `cleanUpApplicationRecord -- 5769` is `cleanUpApplicationRecord -- {value}`.
 =================== 
`cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`isMusicActive...`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of the given log message is:
`sending alarm Alarm{c1705d3 type {type} when {when} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {repeatInterval},listenerTag ={listenerTag}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `Received TIME_TICK alarm; rescheduling` is `Received TIME_TICK alarm; rescheduling`.
 =================== 
The template of `scheduleTimeTickEvent triggerAtTime = 509262332` is `scheduleTimeTickEvent triggerAtTime = {triggerAtTime}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:false`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `received broadcast android.intent.action.TIME_TICK` is `received broadcast {action}`.
 =================== 
The template of `handleTimeUpdate` is `handleTimeUpdate`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `remove(PendingIntent{e4e2534: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}) changed bounds; rebatching` is `remove(PendingIntent{...}) changed bounds; rebatching`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `acquire lock=134680583, flags=0x1, tag="RILJ_ACK_WL", name=com.android.phone, ws=null, uid=1001, pid=2626` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template is `shouldBlockLocation  ret:{ret}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `getNeighboringCellInfo calling app is com.amap.android.ams` is `getNeighboringCellInfo calling app is com.amap.android.ams`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the log message is `Releasing suspend blocker "{blocker}".`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`Unable to start service Intent { act={act} cmp={cmp} } U={U}: not found`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `acquire lock=120758482, flags=0x1, tag="RILJ_ACK_WL", name=com.android.phone, ws=null, uid=1001, pid=2626` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`shouldBlockLocation running ...`
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`getNeighboringCellInfo calling app is {callingApp}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template is `shouldBlockLocation  ret:{ret}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `acquire lock=120758482, flags=0x1, tag="RILJ_ACK_WL", name=com.android.phone, ws=null, uid=1001, pid=2626` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`getNeighboringCellInfo calling app is {callingApp}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `unregisterAudioFocusListener...` is `unregisterAudioFocusListener...`.
 =================== 
`abandonAudioFocus`
 =================== 
`[HSM] stayAwake {stayAwake} uid: {uid}, pid: {pid}`
 =================== 
The template of `Pid:28601 MediaPlayer destructor` is `Pid:{pid} MediaPlayer destructor`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`stopWifiDisplayScanLocked record.mWifiDisplayScanRequested={requested}`
 =================== 
`stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`
 =================== 
`Process {processName} (pid {pid}) has died`
 =================== 
The template of `cleanUpApplicationRecord -- 12236` is `cleanUpApplicationRecord -- {value}`.
 =================== 
`Scheduling restart of crashed service {service} in {time}ms`
 =================== 
The template of the log message is `cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`.
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`isMusicActive...`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of the log message is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`new Process app=ProcessRecord{6eaaf00 0:{processName}/{userId}}, name: {appName}, euid: {euid}`
 =================== 
The template of `Start proc 13003:com.tencent.mobileqq:qzone/u0a111 for service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService` is `Start proc {pid}:{processName} for service {serviceName}`.
 =================== 
`ActivityManagerService,attachApplication,callingPid = {callingPid}`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template is `getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
The template of `interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261949805, event=1, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
The template of `interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261950783, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`resumeSuspendedAutohide`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261950887, event=0, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261950909, event=0, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `acquire lock=189667585, flags=0x1, tag="*launch*", name=android, ws=WorkSource{10057}, uid=1000, pid=1702` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`Taking screenshot from Surface with crop:[{crop}], width:[{width}], height:[{height}], minLayer:[{minLayer}], maxLayer:[{maxLayer}], inRotation:[{inRotation}], rot:[{rot}]`
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
The template of `The change in focus caused us to need to do a layout end` is `The change in focus caused us to need to do a layout end`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
The template of `notifyUiVisibilityChanged:vis=0x708, SystemUiVisibility=0x708` is `notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{trIntent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of the log message is `Releasing suspend blocker "{blocker}".`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`ActivityManagerService,attachApplication,callingPid = {callingPid}`
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`stopWifiDisplayScanLocked record.mWifiDisplayScanRequested={requested}`
 =================== 
`stopWifiDisplayScanLocked mWifiDisplayScanRequestCount={mWifiDisplayScanRequestCount}`
 =================== 
The template of `cleanUpApplicationRecord -- 13094` is `cleanUpApplicationRecord -- {value}`.
 =================== 
`cleanUpApplicationRecordLocked, pid: {pid}, restart: {restart}`
 =================== 
`cleanUpApplicationRecordLocked, reset pid: {pid}, euid: {euid}`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:false` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of the log message is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =121` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =119` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`enqueueNotificationInternal: pkg={pkg} id={id} notification=Notification(pri={pri} contentView={contentView} vibrate={vibrate} sound={sound} tick defaults={defaults} flags={flags} color={color} vis={vis})`
 =================== 
`enqueueNotificationInternal: n.getKey = {getKey}|{packageName}|{id}|{tag}|{flags}`
 =================== 
`getRingerMode...`
 =================== 
`updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
The template of `addNotification key=0|com.tencent.mobileqq|121|null|10111` is `addNotification key={key}|{packageName}|{id}|{tag}|{userId}`.
 =================== 
`mHeadsUpExistenceChangedRunnable`
 =================== 
The template of the given log message is `disable: < expand {ICONS*} alerts {SYSTEM_INFO*} back home recent clock navigationbar search quick_settings >`.
 =================== 
`suspendAutohide`
 =================== 
The template of `updateNotificationShade: total=0, active=0` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `updateNotificationShade: total=1, active=1` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `Marking notification as seen 0|com.tencent.mobileqq|121|null|10111` is `Marking notification as seen {param1}|{param2}|{param3}|{param4}|{param5}`.
 =================== 
The template of `onNotificationExpansionChanged called` is `onNotificationExpansionChanged called`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-429.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`START u0 {act={act} cat={cat} flg={flg} cmp={cmp} bnds={bnds}} from uid {uid} on display {display}`
 =================== 
`ActivityRecord info: ActivityInfo{f39182 com.example.android.notepad.NotePadActivity}, euid: {euid}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws=WorkSource{10020}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED` is `rotationForOrientationLw(orient={orient}, last={last}); user={user} USER_ROTATION_LOCKED`.
 =================== 
The template of `Application requested orientation -1, got rotation 0 which has compatible metrics` is `Application requested orientation -1, got rotation 0 which has compatible metrics`.
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
The template of `The change in focus caused us to need to do a layout end` is `The change in focus caused us to need to do a layout end`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
The template of the given log message is:
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
The template of `getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}` is `getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{trIntent}`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
The template of `getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}` is `getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `updateNotificationShade: total=1, active=1` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
`removeNotificationChildren`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:148, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `ACTIVITY check resid: com.example.android.notepad, size=0` is `ACTIVITY check resid: {resid}, size={size}`.
 =================== 
`mHeadsUpExistenceChangedRunnable`
 =================== 
The template of `updateNotificationShade: total=1, active=1` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:204, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-553.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `makeExpandedInvisible: mExpandedVisible=true` is `makeExpandedInvisible: mExpandedVisible={mExpandedVisible}`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`closeQs`
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >` is `disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261967011, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261968328, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261968928, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261969446, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
The template is `querySoundEffectsEnabled...`.
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
`ActivityManagerService,attachApplication,callingPid = {callingPid}`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `ACTIVITY check resid: com.example.android.notepad, size=1` is `ACTIVITY check resid: {resid}, size={size}`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261972153, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`suspendAutohide`
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
`interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`
 =================== 
The template of `interceptKeyBeforeQueueing: key 3 , result : 1` is `interceptKeyBeforeQueueing: key {key} , result : {result}`.
 =================== 
`querySoundEffectsEnabled...`
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261972262, event=0, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
The template of `acquire lock=189667585, flags=0x1, tag="*launch*", name=android, ws=WorkSource{10057}, uid=1000, pid=1702` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `rotationForOrientationLw(orient=1, last=0); user=0 USER_ROTATION_LOCKED` is `rotationForOrientationLw(orient={orient}, last={last}); user={user} USER_ROTATION_LOCKED`.
 =================== 
`Application requested orientation {orientation}, got rotation {rotation} which has compatible metrics`
 =================== 
`Taking screenshot from Surface with crop:[{crop}], width:[{width}], height:[{height}], minLayer:[{minLayer}], maxLayer:[{maxLayer}], inRotation:[{inRotation}], rot:[{rot}]`
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
`The change in focus caused us to need to do a layout end`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelAutohide`
 =================== 
The template of `notifyUiVisibilityChanged:vis=0x708, SystemUiVisibility=0x708` is `notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
The template of the given log message is:
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
The template is `getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`.
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}`
 =================== 
The template of `getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{10057}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`getRingerMode...`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`suspendAutohide`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261973293, event=1, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`resumeSuspendedAutohide`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
`interceptKeyBeforeQueueing: key {key} , result : {result}`
 =================== 
`querySoundEffectsEnabled...`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template is `cancelPeek: {cancelPeek}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261973840, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`playSoundEffect   effectType: {effectType}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`START u0 {act={act} cat={cat} flg={flg} cmp={cmp} bnds={bnds}} from uid {uid} on display {display}`
 =================== 
`ActivityRecord info: ActivityInfo{71e60ba com.tencent.mobileqq.activity.SplashActivity}, euid: {euid}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
The template of `The change in focus caused us to need to do a layout end` is `The change in focus caused us to need to do a layout end`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{trIntent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:0` is `cancelNotification,index:{index}`.
 =================== 
`cancelNotification,cancelNotificationLocked,callingUid = {callingUid},callingPid = {callingPid}`
 =================== 
`cancelNotificationLocked called,tell the app,reason = {reason}`
 =================== 
The template of `cancelNotificationLocked:0|com.tencent.mobileqq|121|null|10111` is `cancelNotificationLocked:{arg1}|{arg2}|{arg3}|{arg4}|{arg5}`.
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =119` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotificationLocked,remove =com.tencent.mobileqq` is `cancelNotificationLocked,remove ={remove}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
`updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =135` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =140` is `cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `removeNotification:0|com.tencent.mobileqq|121|null|10111` is `removeNotification:{param1}|{param2}|{param3}|{param4}|{param5}`.
 =================== 
The template of `updateNotificationShade: total=0, active=0` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
`cancelNotificationWithTag pid {pid},uid = {uid},tag = {tag},pkg ={pkg},id ={id}`
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =193` is `cancelNotificationWithTag pid {pid},uid ={uid},tag ={tag},pkg ={pkg},id ={id}`.
 =================== 
The template of `cancelNotification,index:-1` is `cancelNotification,index:{index}`.
 =================== 
The template of `shouldBlockLocation  ret:true` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq` is `getAllCellInfo is blocked by permission manager . callingPackage = {callingPackage}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `isMusicActive...` is `isMusicActive...`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261975077, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:true` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq` is `getAllCellInfo is blocked by permission manager . callingPackage = {callingPackage}`.
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:true` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `getCellLocation is blocked by permission manager uid:10111 pid:28601` is `getCellLocation is blocked by permission manager uid:{uid} pid:{pid}`.
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of the log message is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261976180, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261976915, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `shouldBlockLocation running ...` is `shouldBlockLocation running ...`.
 =================== 
The template of `shouldBlockLocation  ret:true` is `shouldBlockLocation  ret:{ret}`.
 =================== 
The template of `getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq` is `getAllCellInfo is blocked by permission manager . callingPackage = {callingPackage}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261977717, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261978352, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261979355, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261980307, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`isMusicActive...`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261980925, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261981426, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261982379, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261983047, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261984484, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is:
`sending alarm Alarm{d764221 type {type} when {when} PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = {repeatInterval},listenerTag ={listenerTag}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `Received TIME_TICK alarm; rescheduling` is `Received TIME_TICK alarm; rescheduling`.
 =================== 
`scheduleTimeTickEvent triggerAtTime = {triggerAtTime}`
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `received broadcast android.intent.action.TIME_TICK` is `received broadcast android.intent.action.TIME_TICK`.
 =================== 
The template is `handleTimeUpdate`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `playSoundEffect   effectType: 0` is `playSoundEffect   effectType: {effectType}`.
 =================== 
`querySoundEffectsEnabled...`
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `isWiredHeadsetOn...` is `isWiredHeadsetOn...`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `acquire lock=173466309, flags=0x1, tag="AudioMix", name=audioserver, ws=null, uid=1041, pid=0` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setDataSource(166, 0, 576460752303423487)` is `setDataSource({param1}, {param2}, {param3})`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `getStreamVolume  treamType: 5` is `getStreamVolume  treamType: {treamType}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`Destroying surface Surface(name={name}) called by {caller}`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of the given log message is:
`Destroying surface Surface(name={name}) called by {caller} com.android.server.wm.WindowStateAnimator.destroySurface:{line1} com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:{line2} com.android.server.wm.WindowState.destroyOrSaveSurface:{line3} com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementInner:{line4} com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementLoop:{line5} com.android.server.wm.WindowSurfacePlacer.performSurfacePlacement:{line6} com.android.server.wm.WindowManagerSe`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`playSoundEffect   effectType: {effectType}`
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261986874, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261987391, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=0, mPlugType=0, mBatteryLevel=23` is `updateIsPoweredLocked: wasPowered={wasPowered}, mIsPowered={mIsPowered}, oldPlugType={oldPlugType}, mPlugType={mPlugType}, mBatteryLevel={mBatteryLevel}`.
 =================== 
The template of `received broadcast android.intent.action.BATTERY_CHANGED` is `received broadcast android.intent.action.BATTERY_CHANGED`.
 =================== 
`ACTION_BATTERY_CHANGED AMP: {amp}; Volt: {volt}`
 =================== 
The template of `updateChargingLocked: charging=false` is `updateChargingLocked: charging={charging}`.
 =================== 
`onReceive, action:{action}`
 =================== 
The template of `ACTION_BATTERY_CHANGED pluggedType: 0` is `ACTION_BATTERY_CHANGED pluggedType: {pluggedType}`.
 =================== 
The template of `ApStaDisabledState what=155652` is `ApStaDisabledState what={what}`.
 =================== 
The template of `DefaultState what=155652` is `DefaultState what={what}`.
 =================== 
The template of `battery changed pluggedType: 0` is `battery changed pluggedType: {pluggedType}`.
 =================== 
The template of `RefreshBatteryInfo isBatteryLow: 23` is `RefreshBatteryInfo isBatteryLow: {isBatteryLow}`.
 =================== 
The template of `ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000` is `ChargingSpeed  Wattage: -1 ST: {ST} --> {newST}`.
 =================== 
`handleBatteryUpdate`
 =================== 
`RefreshBatteryInfo isBatteryLow: {isBatteryLow}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws={ws}, uid={uid}, pid={pid}`
 =================== 
The template of the given log message is `ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`.
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`.
 =================== 
The template of `getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output` is `getRunningAppProcesses: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`suspendAutohide`
 =================== 
The template of `interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false` is `interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`.
 =================== 
The template of `interceptKeyBeforeQueueing: key 3 , result : 1` is `interceptKeyBeforeQueueing: key {key} , result : {result}`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261988739, event=1, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`interceptKeyTq keycode={keycode} interactive={interactive} keyguardActive={keyguardActive} policyFlags={policyFlags} down {down} canceled {canceled}`
 =================== 
The template of `interceptKeyBeforeQueueing: key 3 , result : 1` is `interceptKeyBeforeQueueing: key {key} , result : {result}`.
 =================== 
The template of `querySoundEffectsEnabled...` is `querySoundEffectsEnabled...`.
 =================== 
`userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template is `cancelPeek: {cancelPeek}`.
 =================== 
`setLightsOn(true)`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `acquire lock=189667585, flags=0x1, tag="*launch*", name=android, ws=WorkSource{10057}, uid=1000, pid=1702` is `acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws={ws}, uid={uid}, pid={pid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `setLightsOn(true)` is `setLightsOn(true)`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
`Taking screenshot from Surface with crop:[{crop}], width:[{width}], height:[{height}], minLayer:[{minLayer}], maxLayer:[{maxLayer}], inRotation:[{inRotation}], rot:[{rot}]`
 =================== 
The template of `The change in focus caused us to need to do a layout begin` is `The change in focus caused us to need to do a layout begin`.
 =================== 
The template of `The change in focus caused us to need to do a layout end` is `The change in focus caused us to need to do a layout end`.
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bounds}] }`.
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{trIntent}`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`.
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}`
 =================== 
`setSystemUiVisibility vis={vis} mask={mask} oldVal={oldVal} newVal={newVal} diff={diff} fullscreenStackVis={fullscreenStackVis} dockedStackVis={dockedStackVis}, fullscreenStackBounds=Rect({fullscreenStackBounds}), dockedStackBounds=Rect({dockedStackBounds})`
 =================== 
The template of `cancelAutohide` is `cancelAutohide`.
 =================== 
`notifyUiVisibilityChanged:vis={vis}, SystemUiVisibility={SystemUiVisibility}`
 =================== 
`getRingerMode...`
 =================== 
`release:lock={lock}, flg={flg}, tag="{tag}", name={name}", ws=WorkSource{ws}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`enqueueNotificationInternal: pkg={pkg} id={id} notification=Notification(pri={pri} contentView={contentView} vibrate={vibrate} sound={sound} tick defaults={defaults} flags={flags} color={color} category={category} vis={vis})`
 =================== 
`enqueueNotificationInternal: n.getKey = {getKey}|{packageName}|{id}|{tag}|{userId}`
 =================== 
`updateLightsLocked,mInCall ={mInCall},mScreenOn = {mScreenOn},ledNotification == null?{ledNotification}`
 =================== 
The template of `updateLightsLocked,turn off notificationLight` is `updateLightsLocked,turn off notificationLight`.
 =================== 
The template of `addNotification key=0|com.tencent.mm|4097|null|10112` is `addNotification key={key}|{packageName}|{id}|{tag}|{userId}`.
 =================== 
`mHeadsUpExistenceChangedRunnable`
 =================== 
The template of `disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >` is `disable: < expand {ICONS}* alerts {SYSTEM_INFO}* back home recent clock navigationbar search quick_settings >`.
 =================== 
The template of `suspendAutohide` is `suspendAutohide`.
 =================== 
The template of `updateNotificationShade: total=0, active=0` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `updateNotificationShade: total=1, active=1` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `Marking notification as seen 0|com.tencent.mm|4097|null|10112` is `Marking notification as seen {param1}|{param2}|{param3}|{param4}|{param5}`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`.
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
The template of `onNotificationExpansionChanged called` is `onNotificationExpansionChanged called`.
 =================== 
`Destroying surface Surface(name={surfaceName}) called by {caller}`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-429.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
The template of `getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output` is `getTasks: caller {caller} does not hold {permission}; limiting output`.
 =================== 
`getTasks: caller {caller} does not hold {permission}; limiting output`
 =================== 
`getTasks: caller {caller} does not hold REAL_GET_TASKS; limiting output`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
`sending alarm Alarm{2741459 type 3 when 509267844 PendingIntent{f75f81e: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}},repeatInterval = {repeatInterval},listenerTag ={listenerTag}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is `Acquiring suspend blocker "{blocker}".`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Releasing suspend blocker "PowerManagerService.WakeLocks".` is `Releasing suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `userActivityNoUpdateLocked: eventTime=261991304, event=2, flags=0x0, uid=1000` is `userActivityNoUpdateLocked: eventTime={eventTime}, event={event}, flags={flags}, uid={uid}`.
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of the given log message is:
`onInterceptTouchEvent MotionEvent { action={action}, actionButton={actionButton}, id[0]={id[0]}, x[0]={x[0]}, y[0]={y[0]}, toolType[0]={toolType[0]}, buttonState={buttonState}, metaState={metaState}, flags={flags}, edgeFlags={edgeFlags}, pointerCount={pointerCount}, historySize={historySize}, eventTime={eventTime}, downTime={downTime}, deviceId={deviceId}, source={source} }, mBlockTouches={mBlockTouches}`.
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of the given log message is:
`onInterceptTouchEvent MotionEvent { action={action}, actionButton={actionButton}, id[0]={id[0]}, x[0]={x[0]}, y[0]={y[0]}, toolType[0]={toolType[0]}, buttonState={buttonState}, metaState={metaState}, flags={flags}, edgeFlags={edgeFlags}, pointerCount={pointerCount}, historySize={historySize}, eventTime={eventTime}, downTime={downTime}, deviceId={deviceId}, source={source} }, mBlockTouches={mBlockTouches}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`playSoundEffect   effectType: {effectType}`
 =================== 
The template is `querySoundEffectsEnabled...`.
 =================== 
`updateNotificationShade: total={total}, active={active}`
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
`animateCollapsePanels:flags={flags}, force={force}, delayed={delayed}, mExpandedVisible={mExpandedVisible}`
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {boolean}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
`updateNotificationShade: total={total}, active={active}`
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread start` is `logNotificationVisibilityChanges runInThread start`.
 =================== 
The template of `onNotificationVisibilityChanged called` is `onNotificationVisibilityChanged called`.
 =================== 
The template of `logNotificationVisibilityChanges runInThread over` is `logNotificationVisibilityChanges runInThread over`.
 =================== 
`START u0 {flg} cmp={component} (has extras) from uid {uid} on display {display}`
 =================== 
`ActivityRecord info: ActivityInfo{80c2e70 com.tencent.mm.ui.LauncherUI}, euid: {euid}`
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:204, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
The template of `updateClipping isOverlap:true, getTopPadding=333.0, Translation=-553.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `makeExpandedInvisible: mExpandedVisible=true` is `makeExpandedInvisible: mExpandedVisible={mExpandedVisible}`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
`instantCollapse`
 =================== 
The template of `cancelPeek: false` is `cancelPeek: {value}`.
 =================== 
The template of `updateNotificationShade: total=1, active=1` is `updateNotificationShade: total={total}, active={active}`.
 =================== 
The template of `removeNotificationChildren` is `removeNotificationChildren`.
 =================== 
The template of `closeQs` is `closeQs`.
 =================== 
The template of `startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=0x24000000 cmp=com.tencent.mm/.ui.LauncherUI (has extras) }` is `startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg={flg} cmp={component} (has extras) }`.
 =================== 
The template of `resumeSuspendedAutohide` is `resumeSuspendedAutohide`.
 =================== 
The template of `disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >` is `disable: < expand {icons}* alerts {system_info}* back home recent clock navigationbar search quick_settings >`.
 =================== 
`overlapAmount:{overlapAmount}, previousNotificationEnd:{previousNotificationEnd}, newYTranslation:{newYTranslation}, location:{location}, i:{i}, getTopPadding:{getTopPadding}, getLocationOnScreen():{getLocationOnScreen}`
 =================== 
The template of `state.clipTopAmount:204, i:0` is `state.clipTopAmount:{clipTopAmount}, i:{i}`.
 =================== 
`updateClipping isOverlap={isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:true` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
The template of `makeExpandedInvisible: mExpandedVisible=false` is `makeExpandedInvisible: mExpandedVisible={mExpandedVisible}`.
 =================== 
`acquire lock={lock}, flags={flags}, tag="{tag}", name={name}, ws=WorkSource{10112}, uid={uid}, pid={pid}`
 =================== 
`ready={ready},policy={policy},wakefulness={wakefulness},wksummary={wksummary},uasummary={uasummary},bootcompleted={bootcompleted},boostinprogress={boostinprogress},waitmodeenable={waitmodeenable},mode={mode},manual={manual},auto={auto},adj={adj}userId={userId}`
 =================== 
The template of `Acquiring suspend blocker "PowerManagerService.WakeLocks".` is `Acquiring suspend blocker "PowerManagerService.WakeLocks"`.
 =================== 
The template of `onNotificationClick called` is `onNotificationClick called`.
 =================== 
The template of `cancelNotification,index:0` is `cancelNotification,index:{index}`.
 =================== 
`applyOptionsLocked: Unknown animationType={animationType}`
 =================== 
`getRunningAppProcesses: caller {caller} does not hold {permission}; limiting output`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bnds}] }`.
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} flg={flg} cmp={cmp} }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} dat={dat} typ={typ} flg={flg} cmp={cmp} (has extras) }`
 =================== 
`getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI}`
 =================== 
The template of the given log message is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { flg={flg} cmp={cmp} bnds=[{bounds}] }`.
 =================== 
The template of `Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }` is `Skipping, withExcluded: {withExcluded}, tr.intent:Intent { act={act} flg={flg} cmp={cmp} (has extras) }`.
 =================== 
`Skipping, withExcluded: {withExcluded}, tr.intent:{intent}`
 =================== 
The template of `getRecentTasks: num=10,flags=62,totalTasks=46` is `getRecentTasks: num={num},flags={flags},totalTasks={totalTasks}`.
 =================== 
`getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI}`
 =================== 
`mHeadsUpExistenceChangedRunnable`
 =================== 
The template of `updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0` is `updateClipping isOverlap:{isOverlap}, getTopPadding={getTopPadding}, Translation={Translation}`.
 =================== 
The template of `updateDimmedActivatedHideSensitive overlap:false` is `updateDimmedActivatedHideSensitive overlap:{overlap}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template is `Animating brightness: target={target}, rate={rate}`.
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
`Animating brightness: target={target}, rate={rate}`
 =================== 
`HBM brightnessIn ={brightnessIn}`
 =================== 
`HBM brightnessOut ={brightnessOut}`
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
The template of `HBM brightnessIn =38` is `HBM brightnessIn ={brightnessIn}`.
 =================== 
The template of `HBM brightnessOut =38` is `HBM brightnessOut ={brightnessOut}`.
 =================== 
The template of `Animating brightness: target=38, rate=200` is `Animating brightness: target={target}, rate={rate}`.
 =================== 
